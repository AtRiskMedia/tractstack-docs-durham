---
const { title = "", id = "", unitId = "", tutorialId = "" } = Astro.props;
---





<astro-checkbox data-id={id} data-title={title} data-unitid={unitId} data-tutorialid={tutorialId}>
    <input type="checkbox" id ={id} name={unitId} value={tutorialId} />
    <label for="checkbox">{title}</label>
</astro-checkbox>


<script>
    
import { isTemplateMiddle } from 'typescript';
import { isChecked, checkMap } from './tutorialStore.ts';

   

    class Checkbox extends HTMLElement{
        constructor(){
            super();
            
            // Variables
            const id = this.dataset.id;
            const title = this.dataset.title;
            const unitId = this.dataset.unitid;
            const tutorialId = this.dataset.tutorialid;

            function openDialog(){
                if(id){
                    const lookup = checkMap.get();
                    console.log('Lookup:', lookup );
                    console.log('Lookup id:', lookup[id]);
                    if (typeof lookup !== 'undefined' && typeof lookup[id] !== 'undefined' && typeof lookup[id][unitId] !== 'undefined' && lookup[id][unitId]){
                        console.log('unit Id: ', unitId);
                        checkMap.setKey(id, {[unitId]:false});
                    }else{
                        checkMap.setKey(id, {[unitId]:true});
                    }
                    console.log('checkMap is now: ', checkMap.get());
                }
            }
               
            
            const checkbox = this.querySelector('input');
            checkbox?.addEventListener('change', () => {
                console.log('ID: ', id, isChecked.get());
            });
            document.getElementById(id)?.addEventListener('change', openDialog);
        }
    }
    customElements.define('astro-checkbox', Checkbox)

</script>